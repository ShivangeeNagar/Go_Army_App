/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.veteranRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.GradSchoolOrganization;
import Business.Organization.Organization;
import Business.Organization.VeteranOrganization;
import Business.UserAccount.UserAccount;
import Business.Veteran.VeteranDirectory;
import Business.WorkQueue.GradSchoolRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author shivanginagar
 */
public class RequestGradJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestGradJPanel
     */
    private JPanel userProcessContainer;
    private VeteranOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    private VeteranDirectory vd;
    String bachDegree;
    
    RequestGradJPanel(JPanel userProcessContainer, UserAccount userAccount, VeteranDirectory vd, EcoSystem system) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.vd = vd;
        this.userAccount = userAccount;
        this.system = system;
        txtHSgrade.setEnabled(false);
        txtHighSchool.setEnabled(false);
        txtBachelorUniv.setEnabled(false);
        txtBachGrade.setEnabled(false);
        comboDegree.setEnabled(false);
        
    }
    
    public void populateData() {
        String message = null;
        
        if (comboDegree.getSelectedItem().equals("Computer Science")) {
            comboProgram.addItem("Masters in Computer Science");
            comboProgram.addItem("Masters in Computer Systems Engineering");
            message = "Masters in Computer Science & Masters in Computer Systems Engineering";
        } else if (comboDegree.getSelectedItem().equals("Electrical Engineering")) {
            comboProgram.addItem("Masters in Electrical Systems");
            comboProgram.addItem("Masters in Power Systems");
            message = "Masters in Electrical Systems & Masters in Power Systems";
        } else if (comboDegree.getSelectedItem().equals("Human Relations")) {
            comboProgram.addItem("Masters in Human Relations");
            comboProgram.addItem("Masters in HR");
            message = "Masters in Human Relations & Masters in HR";
        } else if (comboDegree.getSelectedItem().equals("Medical")) {
            comboProgram.addItem("Post Doctoral - 2");
            comboProgram.addItem("Post Doctoral - 1");
            message = "Post Doctoral - 1 & Post Doctoral 2";
        } else if (comboDegree.getSelectedItem().equals("Biotechnology")) {
            comboProgram.addItem("Masters in Biomedical Engineering");
            comboProgram.addItem("Masters in Biochemical Engineering");
            message = "Masters in Biomedical Engineering & Biochemical Engineering";
        } else if (comboDegree.getSelectedItem().equals("Law")) {
            comboProgram.addItem("Criminal Law Specialization");
            comboProgram.addItem("Corporate Law Specialization");
            message = "Criminal Law Specialization & Corporate Law Specialization";
        }
        
        txtRecommend1.setText("Based on your Bachelor's Degree in " + comboDegree.getSelectedItem() + ", the following courses are recommended");
        txtRecommend.setText(message);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        highSchoolCheck = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        txtHighSchool = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtHSgrade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        highBachelorCheck = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        txtBachelorUniv = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtBachGrade = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        comboDegree = new javax.swing.JComboBox<>();
        backJButton = new javax.swing.JButton();
        txtRecommend = new javax.swing.JLabel();
        txtRecommend1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboProgram = new javax.swing.JComboBox<>();
        comboUniversity = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        comboUniversity1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAdditional = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setText("Start Application");
        jLabel1.setFocusable(false);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jLabel2.setText("A master’s degree typically requires a year and one-half to two years of full-time study. To earn a master’s degree you usually need to complete around 36 credits");
        jLabel2.setFocusable(false);
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 23));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Apply for a Master's Degree");
        jLabel3.setFocusable(false);
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Have you completed High School: ");
        jLabel5.setFocusable(false);
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, 23));

        highSchoolCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highSchoolCheckActionPerformed(evt);
            }
        });
        add(highSchoolCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Enter High School Name:");
        jLabel6.setFocusable(false);
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, 23));

        txtHighSchool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHighSchoolActionPerformed(evt);
            }
        });
        add(txtHighSchool, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 211, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Enter High School CGPA:");
        jLabel7.setFocusable(false);
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, 23));

        txtHSgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHSgradeActionPerformed(evt);
            }
        });
        add(txtHSgrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, 211, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Have you completed Bachelor's: ");
        jLabel8.setFocusable(false);
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, 23));

        highBachelorCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highBachelorCheckActionPerformed(evt);
            }
        });
        add(highBachelorCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Enter University:");
        jLabel9.setFocusable(false);
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, 23));

        txtBachelorUniv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBachelorUnivActionPerformed(evt);
            }
        });
        add(txtBachelorUniv, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 340, 211, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Enter Bachelor's CGPA:");
        jLabel10.setFocusable(false);
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, 23));

        txtBachGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBachGradeActionPerformed(evt);
            }
        });
        add(txtBachGrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 370, 211, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Choose your concentration:");
        jLabel11.setFocusable(false);
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, 23));

        comboDegree.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer Science", "Electrical Engineering", "Human Relations", "Medical", "Biotechnology", "Law" }));
        add(comboDegree, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 400, 210, -1));

        backJButton.setBackground(new java.awt.Color(20, 53, 94));
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        txtRecommend.setBackground(new java.awt.Color(20, 53, 94));
        txtRecommend.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        txtRecommend.setForeground(new java.awt.Color(20, 53, 94));
        add(txtRecommend, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 160, 580, 31));

        txtRecommend1.setBackground(new java.awt.Color(20, 53, 94));
        txtRecommend1.setForeground(new java.awt.Color(20, 53, 94));
        add(txtRecommend1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 140, 580, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Choose Desired Program");
        jLabel4.setFocusable(false);
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 210, -1, 30));

        add(comboProgram, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 210, 220, -1));

        comboUniversity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Northeastern Univerisity", "Arizona State University", "NJIT", "NYU", "University of Cincinati", "University of Florida" }));
        add(comboUniversity, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 250, 220, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Choose University");
        jLabel12.setFocusable(false);
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 250, -1, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Desired Intake");
        jLabel13.setFocusable(false);
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 330, -1, 30));

        comboUniversity1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Spring", "Fall", "Summer" }));
        add(comboUniversity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 330, 220, -1));

        txtAdditional.setColumns(20);
        txtAdditional.setRows(5);
        jScrollPane1.setViewportView(txtAdditional);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 370, 220, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Additional Information");
        jLabel14.setFocusable(false);
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, -1, 30));

        btnSubmit.setBackground(new java.awt.Color(255, 204, 51));
        btnSubmit.setText("Submit Application");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 510, 230, -1));

        jButton1.setBackground(new java.awt.Color(20, 53, 94));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Get Courses");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 450, 230, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void highSchoolCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highSchoolCheckActionPerformed
        // TODO add your handling code here:

        txtHSgrade.setEnabled(true);
        txtHighSchool.setEnabled(true);
        

    }//GEN-LAST:event_highSchoolCheckActionPerformed

    private void txtHighSchoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHighSchoolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHighSchoolActionPerformed

    private void txtHSgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHSgradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHSgradeActionPerformed

    private void highBachelorCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highBachelorCheckActionPerformed
        // TODO add your handling code here:
        txtBachelorUniv.setEnabled(true);
        txtBachGrade.setEnabled(true);
        comboDegree.setEnabled(true);
    }//GEN-LAST:event_highBachelorCheckActionPerformed

    private void txtBachelorUnivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBachelorUnivActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBachelorUnivActionPerformed

    private void txtBachGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBachGradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBachGradeActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        VeteranWorkAreaJPanel dwjp = (VeteranWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
        
        
        try {
            Float.parseFloat(txtHSgrade.getText());
            Float.parseFloat(txtBachGrade.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter a Valid GPA", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
            
        }
        
        if (Float.parseFloat(txtHSgrade.getText()) > 4 || Float.parseFloat(txtBachGrade.getText()) > 4) {
            JOptionPane.showMessageDialog(null, "Please enter a Valid GPA", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (Float.parseFloat(txtHSgrade.getText()) < 3 || Float.parseFloat(txtBachGrade.getText()) < 3) {
            JOptionPane.showMessageDialog(null, "Sorry, High School & Bachelor's GPA must be above 3 in order to Apply for Grad School", "Warning", JOptionPane.WARNING_MESSAGE);
            txtHSgrade.setEnabled(false);
            txtHighSchool.setEnabled(false);
            txtBachelorUniv.setEnabled(false);
            txtBachGrade.setEnabled(false);
            comboDegree.setEnabled(false);
            
            comboProgram.setEnabled(false);
            
            comboUniversity.setEnabled(false);
            
            comboUniversity1.setEnabled(false);
            
            txtAdditional.setEnabled(false);
            
            txtAdditional.setEnabled(false);
            btnSubmit.setEnabled(false);
            jButton1.setEnabled(false);
            txtBachGrade.setEnabled(false);
            txtBachelorUniv.setEnabled(false);
            txtHSgrade.setEnabled(false);
            txtHighSchool.setEnabled(false);
            highBachelorCheck.setEnabled(false);
            highSchoolCheck.setEnabled(false);
            btnSubmit.setEnabled(false);
            jButton1.setEnabled(false);
            txtBachGrade.setEnabled(false);
            txtBachelorUniv.setEnabled(false);
            txtHSgrade.setEnabled(false);
            txtHighSchool.setEnabled(false);
            highBachelorCheck.setEnabled(false);
            highSchoolCheck.setEnabled(false);
            btnSubmit.setEnabled(false);
            return;
            
        }
        
        
        
        
        if (txtAdditional.getText().equals("") || txtBachGrade.getText().equals("") || txtBachelorUniv.getText().equals("") || txtHighSchool.getText().equals("") || txtHSgrade.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter all fields before Submitting your application!");
            return;
        }
        
        GradSchoolRequest request = new GradSchoolRequest();
        request.setAdditionalInfo(txtAdditional.getText());
        request.setBachDegree((String) comboDegree.getSelectedItem());
        request.setBachGrade(txtBachGrade.getText());
        request.setBachUni(txtBachelorUniv.getText());
        request.setDesIntake((String) comboUniversity1.getSelectedItem());
        request.setDesProgram((String) comboProgram.getSelectedItem());
        request.setDesUni((String) comboUniversity.getSelectedItem());
        request.setHighSchool(txtHighSchool.getText());
        request.setHsGrade(txtHSgrade.getText());
        request.setSender(userAccount);
        request.setStatus("Applied");
        
        Organization org = null;
        
        for (Network network : system.getNetworkList()) {
            //Step 2.a: check against each enterprise
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                System.out.println(enterprise);

                //                    userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                //Step 3:check against each organization for each enterprise
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    System.out.println(organization);
                    
                    if (organization instanceof GradSchoolOrganization) {
                        org = organization;
                        System.out.println(org);
                        break;
                    }
                    
                }
            }
        }
        
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
            System.out.println("Added GradSchoolRequest to Org");
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            System.out.println("Added VocationalRequest to UserAccount");
            JOptionPane.showMessageDialog(null, "Your Application has been submitted Successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
            
        }
        
        String message = "User: " + userAccount.getUsername() + " raised a request for Grad School";

        //        String message = "User: " + userAccount.getUsername() + " raised a request for " + (String) coursesComboBox.getSelectedItem() + " at " + (String) campusComboBox.getSelectedItem() + " Campus";
        try {
            URL yahoo = new URL("https://api.telegram.org/bot886367737:AAE0-wbD4ww50nkPy7M-6KKrMtN2sg70z_Q/sendMessage?chat_id=@AED_Helper&text=" + message);
            URLConnection yc = yahoo.openConnection();
            BufferedReader in = new BufferedReader(
                    new InputStreamReader(
                            yc.getInputStream()));
            String inputLine;
            
            while ((inputLine = in.readLine()) != null) {
                System.out.println(inputLine);
            }
            in.close();
        } catch (Exception e) {
            System.out.println("Oops Something went wrong.");
            
        }
        
        comboProgram.setEnabled(false);
        
        comboUniversity.setEnabled(false);
        
        comboUniversity1.setEnabled(false);
        
        txtAdditional.setEnabled(false);
        btnSubmit.setEnabled(false);
        jButton1.setEnabled(false);
        txtBachGrade.setEnabled(false);
        txtBachelorUniv.setEnabled(false);
        txtHSgrade.setEnabled(false);
        txtHighSchool.setEnabled(false);
        comboProgram.setEnabled(false);
        
        comboUniversity.setEnabled(false);
        comboDegree.setEnabled(false);
        
        comboUniversity1.setEnabled(false);
        
        txtAdditional.setEnabled(false);
        btnSubmit.setEnabled(false);
        jButton1.setEnabled(false);
        txtBachGrade.setEnabled(false);
        txtBachelorUniv.setEnabled(false);
        txtHSgrade.setEnabled(false);
        txtHighSchool.setEnabled(false);
        highBachelorCheck.setEnabled(false);
        highSchoolCheck.setEnabled(false);
        btnSubmit.setEnabled(false);
        jButton1.setEnabled(false);
        txtBachGrade.setEnabled(false);
        txtBachelorUniv.setEnabled(false);
        txtHSgrade.setEnabled(false);
        txtHighSchool.setEnabled(false);
        highBachelorCheck.setEnabled(false);
        highSchoolCheck.setEnabled(false);
        btnSubmit.setEnabled(false);
        

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if (txtBachelorUniv.getText().equals("") || txtHighSchool.getText().equals("") || txtBachGrade.getText().equals("") || txtHSgrade.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter all fields before requesting for Course Recommendation");
            return;
        }
        
        try {
            Float.parseFloat(txtHSgrade.getText());
            Float.parseFloat(txtBachGrade.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter a Valid GPA", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
            
        }
        
        if (Float.parseFloat(txtHSgrade.getText()) > 4 || Float.parseFloat(txtBachGrade.getText()) > 4) {
            JOptionPane.showMessageDialog(null, "Please enter a Valid GPA", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (Float.parseFloat(txtHSgrade.getText()) < 3 || Float.parseFloat(txtBachGrade.getText()) < 3) {
            JOptionPane.showMessageDialog(null, "Sorry, High School & Bachelor's GPA must be above 3 in order to Apply for Grad School", "Warning", JOptionPane.WARNING_MESSAGE);
            txtHSgrade.setEnabled(false);
            txtHighSchool.setEnabled(false);
            txtBachelorUniv.setEnabled(false);
            txtBachGrade.setEnabled(false);
            comboDegree.setEnabled(false);
            
            comboProgram.setEnabled(false);
            
            comboUniversity.setEnabled(false);
            
            comboUniversity1.setEnabled(false);
            
            txtAdditional.setEnabled(false);
            
            txtAdditional.setEnabled(false);
            btnSubmit.setEnabled(false);
            jButton1.setEnabled(false);
            txtBachGrade.setEnabled(false);
            txtBachelorUniv.setEnabled(false);
            txtHSgrade.setEnabled(false);
            txtHighSchool.setEnabled(false);
            highBachelorCheck.setEnabled(false);
            highSchoolCheck.setEnabled(false);
            btnSubmit.setEnabled(false);
            jButton1.setEnabled(false);
            txtBachGrade.setEnabled(false);
            txtBachelorUniv.setEnabled(false);
            txtHSgrade.setEnabled(false);
            txtHighSchool.setEnabled(false);
            highBachelorCheck.setEnabled(false);
            highSchoolCheck.setEnabled(false);
            btnSubmit.setEnabled(false);
            return;
            
        }
        
        populateData();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> comboDegree;
    private javax.swing.JComboBox<String> comboProgram;
    private javax.swing.JComboBox<String> comboUniversity;
    private javax.swing.JComboBox<String> comboUniversity1;
    private javax.swing.JCheckBox highBachelorCheck;
    private javax.swing.JCheckBox highSchoolCheck;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAdditional;
    private javax.swing.JTextField txtBachGrade;
    private javax.swing.JTextField txtBachelorUniv;
    private javax.swing.JTextField txtHSgrade;
    private javax.swing.JTextField txtHighSchool;
    private javax.swing.JLabel txtRecommend;
    private javax.swing.JLabel txtRecommend1;
    // End of variables declaration//GEN-END:variables
}
