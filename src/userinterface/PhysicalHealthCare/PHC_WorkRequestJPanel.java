/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PhysicalHealthCare;

import Business.EcoSystem;
import Business.Email.SendMail;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PhysicalHealthCareOrganization;
import Business.Organization.RehabOrganization;
import Business.UserAccount.UserAccount;
import Business.Veteran.Veteran;
import Business.Veteran.VeteranDirectory;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.MentalHealthCareRequest;
import Business.WorkQueue.PermHousingRequest;
import Business.WorkQueue.PhysicalHealthCareRequest;
import Business.WorkQueue.RehabWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
  
/**
 *
 * @author dgoda
 */
public class PHC_WorkRequestJPanel extends javax.swing.JPanel {
    EcoSystem system;
     JPanel userProcessContainer;
   PhysicalHealthCareRequest request;
     UserAccount userAccount;
    /**
     * Creates new form PHC_WorkRequestJPanel
     */
  

    PHC_WorkRequestJPanel(JPanel userProcessContainer, PhysicalHealthCareRequest request,EcoSystem system , UserAccount userAccount) {
         initComponents();
        this.request = request;
        this.userAccount = userAccount;
        this.system = system;
        this.userProcessContainer = userProcessContainer;
         VeteranDirectory vdr =  system.getVd();
        //ArrayList<Business.Veteran.Veteran> vetDir = vd.getVeteran_Dir();
        String veteranName = "";
        for (Veteran v : system.getVd().getVeteran_Dir() ) {
            if (v.getUsername().equals(request.getSender().getUsername())) {
                veteranName = v.getFirstName()+ " "+ v.getLastName();
                break;

            }
        }
           
           lblMainConcern.setText(((PhysicalHealthCareRequest) request).getMain_Concern());
           lbl_Brain_injury.setText(((PhysicalHealthCareRequest) request).getPhysical_injury());
           lbl_MedicalHistory.setText(((PhysicalHealthCareRequest) request).getMedicalHistory_phyical());     
          // lbl_PatientAge.setText(null);
           lbl_concernDescription.setText(((PhysicalHealthCareRequest) request).getDetails_concern());
           
           
           txt_EmailID.setEnabled(false);
          btnRehab.setEnabled(false);
          
           lbl_patientName.setText(veteranName);
           lbl_symptoms.setText(((PhysicalHealthCareRequest) request).getSymptons());
           
           lbl_heartDisease.setText(((PhysicalHealthCareRequest) request).getHeartDisease());
           lbl_prosthesis.setText(((PhysicalHealthCareRequest) request).getProsthesis_req());
           lbl_diabetic.setText(((PhysicalHealthCareRequest) request).getDiabetic());
           lbl_BP.setText(((PhysicalHealthCareRequest) request).getBloodPressure());
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lbl_patientName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblMainConcern = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbl_symptoms = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_concernDescription = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_MedicalHistory = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbl_Brain_injury = new javax.swing.JLabel();
        lbl = new javax.swing.JLabel();
        txtArea_analysis = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea_Comments = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbl_BP = new javax.swing.JLabel();
        diabetic = new javax.swing.JLabel();
        lbl_diabetic = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbl_heartDisease = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lbl_prosthesis = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        max_BP = new javax.swing.JTextField();
        txt_minBP = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txt_BloodSugar = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txt_bodyTemp = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txt_pulserate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_PrescribeMedicine = new javax.swing.JTextArea();
        btnRehab = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_EmailID = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setBackground(new java.awt.Color(20, 53, 94));
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 21, -1, -1));

        submitJButton.setBackground(new java.awt.Color(20, 53, 94));
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("Submit Result");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(823, 464, 138, 55));

        jLabel4.setText("Patient Name: ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 99, -1, -1));

        lbl_patientName.setText("jLabel5");
        add(lbl_patientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 99, 98, 14));

        jLabel2.setText("Main Concern:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 141, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Troop Details");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 65, 197, -1));

        lblMainConcern.setText("jLabel2");
        add(lblMainConcern, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 133, 140, 33));

        jLabel9.setText("Symptoms");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 184, -1, -1));

        lbl_symptoms.setText("jLabel10");
        add(lbl_symptoms, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 184, -1, -1));

        jLabel6.setText("Concern Description:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 214, -1, -1));

        lbl_concernDescription.setText("jLabel7");
        add(lbl_concernDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 200, 169, 45));

        jLabel7.setText("Medical History");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 263, 133, -1));

        lbl_MedicalHistory.setText("jLabel8");
        add(lbl_MedicalHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 263, -1, -1));

        jLabel8.setText("Physical Injury:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 307, -1, -1));

        lbl_Brain_injury.setText("jLabel9");
        add(lbl_Brain_injury, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 307, -1, -1));

        lbl.setText("Analysis");
        add(lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 123, -1, -1));
        add(txtArea_analysis, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 119, 468, -1));

        jLabel3.setText("Doctor Notes and Comments");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 341, -1, -1));

        txtArea_Comments.setColumns(20);
        txtArea_Comments.setRows(5);
        jScrollPane1.setViewportView(txtArea_Comments);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 325, 338, 47));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Doctor Analysis");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 65, -1, -1));

        jLabel10.setText("Blood pressure");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 404, -1, -1));

        lbl_BP.setText("jLabel13");
        add(lbl_BP, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 404, -1, -1));

        diabetic.setText("diabetic");
        add(diabetic, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 483, -1, -1));

        lbl_diabetic.setText("jLabel13");
        add(lbl_diabetic, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 483, -1, -1));

        jLabel14.setText("Radiation Exposure:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 363, -1, -1));

        lbl_heartDisease.setText("jLabel15");
        add(lbl_heartDisease, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 363, -1, -1));

        jLabel16.setText("Prosthesis Requirement");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 429, -1, -1));

        lbl_prosthesis.setText("jLabel17");
        add(lbl_prosthesis, new org.netbeans.lib.awtextra.AbsoluteConstraints(229, 429, -1, -1));

        jLabel18.setText("Min BP");
        add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 165, -1, -1));

        jLabel19.setText("Max BP");
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(669, 165, -1, -1));
        add(max_BP, new org.netbeans.lib.awtextra.AbsoluteConstraints(773, 161, 68, -1));
        add(txt_minBP, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 161, 68, -1));

        jLabel20.setText("Blood Sugar Level");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 225, -1, -1));
        add(txt_BloodSugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(554, 221, 68, -1));

        jLabel21.setText("Body Temperature");
        add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 225, -1, -1));
        add(txt_bodyTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(773, 221, 68, -1));

        jLabel22.setText("Pulse Rate");
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(859, 165, 89, -1));
        add(txt_pulserate, new org.netbeans.lib.awtextra.AbsoluteConstraints(954, 161, 68, -1));

        jLabel13.setText("Prescribe Medicine");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 279, -1, -1));

        txt_PrescribeMedicine.setColumns(20);
        txt_PrescribeMedicine.setRows(5);
        jScrollPane2.setViewportView(txt_PrescribeMedicine);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(623, 263, 338, 44));

        btnRehab.setBackground(new java.awt.Color(20, 53, 94));
        btnRehab.setForeground(new java.awt.Color(255, 255, 255));
        btnRehab.setText("Rehab Redirect");
        btnRehab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRehabActionPerformed(evt);
            }
        });
        add(btnRehab, new org.netbeans.lib.awtextra.AbsoluteConstraints(823, 390, 138, 54));

        jLabel1.setText("Email ID");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 449, 79, 23));
        add(txt_EmailID, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 448, 177, -1));

        jCheckBox1.setText("Refer and redirect Troop to Rehab Center");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 402, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Process Physical Healthcare Request");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 480, 39));
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        
       
       
          //  phc_request.setPhc_workRequest(resultJTextField.getText());
            //request.setStatus("Completed");
            request.setStatus("Approved");
            request.setDoctorAnalysis(txtArea_analysis.getText());
            if(txtArea_analysis.getText().equals("")){
             JOptionPane.showMessageDialog(null," Doctor Analysis can't be empty");
             return;
         }
         
            request.setDoctorComments(txtArea_Comments.getText());
            if(txtArea_analysis.getText().equals("")){
             JOptionPane.showMessageDialog(null," Doctor comments can't be empty");
             return;
         }
            
            request.setMinBP(txt_minBP.getText());
              try{
                  if(!txt_minBP.getText().equals(""))
         Integer.parseInt(txt_minBP.getText());
         }
         catch(NumberFormatException ex){
          JOptionPane.showMessageDialog(null,"Minimum BP cannot be String");
           return;
         }
            
            request.setMaxBP(max_BP.getText());
            try{
                 if(!max_BP.getText().equals(""))
         Integer.parseInt(max_BP.getText());
         }
         catch(NumberFormatException ex){
          JOptionPane.showMessageDialog(null,"Maximum BP cannot be String");
           return;
         }
            request.setPulseRate(txt_pulserate.getText());
             try{
                  if(!txt_pulserate.getText().equals(""))
         Integer.parseInt(txt_pulserate.getText());
         }
         catch(NumberFormatException ex){
          JOptionPane.showMessageDialog(null,"Pulse Rate cannot be String");
           return;
         }
            
            request.setBloodSugarlevel(txt_BloodSugar.getText());
             try{
                    if(!txt_BloodSugar.getText().equals(""))
         Integer.parseInt(txt_BloodSugar.getText());
         }
         catch(NumberFormatException ex){
          JOptionPane.showMessageDialog(null,"Blood sugar cannot be String");
           return;
         }
            request.setBodyTemp(txt_bodyTemp.getText());
               try{
                      if(!txt_bodyTemp.getText().equals(""))
         Integer.parseInt(txt_bodyTemp.getText());
         }
         catch(NumberFormatException ex){
          JOptionPane.showMessageDialog(null,"Body temperature cannot be String");
           return;
         }

         request.setMedicine(txt_PrescribeMedicine.getText());
            
               String veteranName = "";
        for (Veteran v : system.getVd().getVeteran_Dir() ) {
            if (v.getUsername().equals(request.getSender().getUsername())) {
                veteranName = v.getFirstName()+ " "+ v.getLastName();
                break;

            }
        }     
        
             String to = String.valueOf(request.getSender().getUsername());
             String subject = "Report for the PHC request raised : "+ request.getMain_Concern();
             String user = "maheshprasad4569@gmail.com";
             String pass = "Mahi1234$";   
             String message = " Hello "+ veteranName 
                         + "Please Look into the report provide by your dcotor for your PHC request concern: " + ((PhysicalHealthCareRequest) request).getMain_Concern()
                         + " Doctor Name: "+  request.getReceiver() + "  \n"+ 
                     "According to the reports generated by your doctor, You are facing :  " + txtArea_analysis.getText()+
                          "with comments  : " + txtArea_Comments.getText()+"\n\n"+" Please contact your doctor for more details. "
                     +"\n\n "+
                     "Basic Vital Sign Reports include : \n\n"
                     +" Blood Pressure: Min : " +  txt_minBP.getText() +" Max : "+ txt_minBP.getText()+"\n"
                     +" Pulse Rate : "+txt_pulserate.getText()+"\n"
                     +" Body temperature : "+ txt_bodyTemp.getText()+"\n"+
                      " Prescribed Medicine : "+ txt_PrescribeMedicine.getText()+"\n"
                        +  " Blood Sugar Level : "+ txt_BloodSugar.getText()+"\n"
                     + "Regards "+
                     request.getReceiver();

                SendMail.send(to,subject, message, user, pass);
         txtArea_analysis.setText("");
                txt_minBP.setText("");
                        max_BP.setText("");
                                txt_pulserate.setText("");
                                       txt_EmailID.setText("");
                                                txt_BloodSugar.setText("");
                                                        txt_bodyTemp.setText("");
                                                                txt_PrescribeMedicine.setText("");
                                                                        txtArea_Comments.setText("");
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PhysicalHealthCareWorkAreaJPanel dwjp = (PhysicalHealthCareWorkAreaJPanel) component;
        dwjp.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed
 private boolean usernamePatternCorrect() {
       Pattern p = Pattern.compile("^[a-zA-Z0-9]+[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
       Matcher m = p.matcher(txt_EmailID.getText());
       boolean b = m.matches();
       return b;
   }
    private void btnRehabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRehabActionPerformed
        // TODO add your handling code here:
        
        
           
         String message = " Hello Rehab Employee ,\n"
        + "Please consider the following veteran for Rehab : \n "
        +  lbl_patientName.getText()+ " with description:  \n"
        + " Main concern: "+  lblMainConcern.getText() + "  \n"+
        " Detailed concern: " + String.valueOf(lbl_concernDescription.getText()) +"  \n"
                +" Symptoms : "+ String.valueOf(lbl_symptoms.getText()) +"  \n"+
       " I further request this veteran for Rehab Living to improve his health due to his substance abuse :  \n"+
                 " beacuse I believe he is suffering : "+ txtArea_analysis.getText()+" \n"+
                 "comments : " +txtArea_Comments.getText() 
                +"  \n" +
                "  \n" +
                "  \n" +
                " Regards";
         
              String veteranName = "";
        for (Veteran v : system.getVd().getVeteran_Dir() ) {
            if (v.getUsername().equals(request.getSender().getUsername())) {
                veteranName = v.getFirstName()+ " "+ v.getLastName();
                break;

            }
        }    
         if(txtArea_analysis.getText().equals("")){
             JOptionPane.showMessageDialog(null,"Doctor Analysis can't be empty");
             return;
         }
          if(!usernamePatternCorrect()){
        JOptionPane.showMessageDialog(null,"Email ID should be the form of xxx@xxx.xxx");
        
        return;
        }
        RehabWorkRequest request = new RehabWorkRequest();
        request.setRehabConcern(txtArea_analysis.getText());
         
          
        request.setStatus("Sent");
        request.setMessage(lblMainConcern.getText());
        request.setSender(userAccount);
        request.setVeteranName(lbl_patientName.getText());
        request.setVeteranEmail(request.getSender().getUsername());
        ///////////////////////////////////////////////
        request.setComments(txtArea_Comments.getText());
          if(txtArea_Comments.getText().equals("")){
             JOptionPane.showMessageDialog(null," Doctor Comments can't be empty");
             return;
         }
       // request.setPhysical_injury();

        Organization org = null;

        for (Network network : system.getNetworkList()) {
            //Step 2.a: check against each enterprise
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                //                    userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                //Step 3:check against each organization for each enterprise
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof RehabOrganization) {
                        org = organization;
                        break;
                    }
                }
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
          //  userAccount.getWorkQueue().getWorkRequestList().add(request);
            System.out.println("Added Reqyesr to Org ");
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            System.out.println("Added Reqyesr to UserAccount ");
            
            String to = txt_EmailID.getText();
          
            String subject = "Request for Veteran Rehab : " +lbl_patientName.getText() ;
            String user = "maheshprasad4569@gmail.com";
            String pass = "Mahi1234$";

            SendMail.send(to,subject, message, user, pass);
         
        }
         txtArea_analysis.setText("");
                txt_minBP.setText("");
                        max_BP.setText("");
                                txt_pulserate.setText("");
                                       txt_EmailID.setText("");
                                                txt_BloodSugar.setText("");
                                                        txt_bodyTemp.setText("");
                                                                txt_PrescribeMedicine.setText("");
                                                                        txtArea_Comments.setText("");
    }//GEN-LAST:event_btnRehabActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()){
            txt_EmailID.setEnabled(true);
            btnRehab.setEnabled(true);
            submitJButton.setEnabled(false);
        }
        else
        {
             submitJButton.setEnabled(true);
            txt_EmailID.setEnabled(false);
            btnRehab.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnRehab;
    private javax.swing.JLabel diabetic;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl;
    private javax.swing.JLabel lblMainConcern;
    private javax.swing.JLabel lbl_BP;
    private javax.swing.JLabel lbl_Brain_injury;
    private javax.swing.JLabel lbl_MedicalHistory;
    private javax.swing.JLabel lbl_concernDescription;
    private javax.swing.JLabel lbl_diabetic;
    private javax.swing.JLabel lbl_heartDisease;
    private javax.swing.JLabel lbl_patientName;
    private javax.swing.JLabel lbl_prosthesis;
    private javax.swing.JLabel lbl_symptoms;
    private javax.swing.JTextField max_BP;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextArea txtArea_Comments;
    private javax.swing.JTextField txtArea_analysis;
    private javax.swing.JTextField txt_BloodSugar;
    private javax.swing.JTextField txt_EmailID;
    private javax.swing.JTextArea txt_PrescribeMedicine;
    private javax.swing.JTextField txt_bodyTemp;
    private javax.swing.JTextField txt_minBP;
    private javax.swing.JTextField txt_pulserate;
    // End of variables declaration//GEN-END:variables
}
